apiVersion: v1
kind: PersistentVolume
metadata:
  name: darkbot-{{ .Values.env }}-pv
spec:
  capacity:
    storage: 1Gi
  accessModes:
  - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: my-local-storage
  local:
    path: /mnt/darkbot-{{ .Values.env }}
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - darklab-cluster
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: darkbot-{{ .Values.env }}-claim
spec:
  accessModes:
  - ReadWriteOnce
  storageClassName: my-local-storage
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dind-deploy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.name }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  template:
    metadata:
      labels:
        app: {{ .Values.name }}
    spec:
      imagePullSecrets:
        - name: dockercred
      volumes:
      - name: www-persistent-storage
        persistentVolumeClaim:
          claimName: darkbot-{{ .Values.env }}-claim
      containers:
        - name: {{ .Values.name }}-pod
          image: localhost:32000/darklab-darkbot:v1.0.2
          volumeMounts:
            - name: www-persistent-storage
              mountPath: /app/data
          env:
            - name: discord_bot_key
              value: {{ .Values.discord_bot_key }}
            - name: player_request_url
              value: {{ .Values.player_request_url }}
            - name: base_request_url
              value: {{ .Values.base_request_url }}
            - name: forum_acc
              value: {{ .Values.forum_acc }}
            - name: forum_pass
              value: {{ .Values.forum_pass }}