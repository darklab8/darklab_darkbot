variables:
  PIPELINE_RUNNER: registry.gitlab.com/darklab2/darklab_pipeliner/darklab-pipeliner:kubectl-v1.0.3
  TARGET_DEV: darklab.dedyn.io:32000/darklab-darkbot:latest
  IMAGE_DEV: localhost:32000/darklab-darkbot:latest
  TARGET_PROD: darklab.dedyn.io:32000/darklab-darkbot:v1.0.4
  IMAGE_PROD: localhost:32000/darklab-darkbot:v1.0.4

stages:
  - deploy-dev-docker
  - deploy-dev-kube
  - deploy-prod

dev_build_and_push:
  image: ${PIPELINE_RUNNER}
  stage: deploy-dev-docker
  script:
    - docker build --tag $TARGET_DEV .
    - echo "${darklab_registry_key}" > /etc/docker/daemon.json
    - docker push $TARGET_DEV

dev_init_kube:
  image: ${PIPELINE_RUNNER}
  stage: deploy-dev-kube
  script:
    - mkdir ~/.kube
    - echo "${kubectl_config}" > ~/.kube/config
    - echo "${darkbot_secret_dev_yml}" > k8s/charts/darkbot/secret_dev.yaml
    - cd k8s/charts/darkbot
    - python3 install-dev.py --darkbot_image=$IMAGE_DEV
    - kubectl scale deploy dind-deploy --namespace=darkbot-dev --replicas 0
    - kubectl scale deploy dind-deploy --namespace=darkbot-dev --replicas 1

prod_init_kube:
  image: ${PIPELINE_RUNNER}
  stage: deploy-prod
  script:
    - mkdir ~/.kube
    - echo "${kubectl_config}" > ~/.kube/config
    - echo "${darkbot_secret_prod_yml}" > k8s/charts/darkbot/secret_prod.yaml
    - cd k8s/charts/darkbot
    - python3 install-prod.py --darkbot_image=$IMAGE_PROD
  rules:
    - when: manual